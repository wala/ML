name: Continuous integration
on:
  push:
    branches: [ "master", "jumpstart-jep-merge" ]
  pull_request:
    branches: [ "master", "jumpstart-jep-merge" ]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out wala/ML sources
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Install Python.
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'
    - name: Install Python dependencies.
      run: pip install -r requirements.txt
    - name: Checkout wala/IDE sources.
      run: git clone --depth=1 https://github.com/wala/IDE ${{ runner.temp }}/IDE
    - name: Checkout ponder-lab/jython3 sources.
      run: git clone --depth=1 https://github.com/ponder-lab/jython3.git ${{ runner.temp }}/jython3
    - name: Install Jython3.
      run: |
        pushd ${{ runner.temp }}/jython3
        ant
        pushd dist
        mvn install:install-file -Dfile=./jython-dev.jar -DgroupId="org.python" -DartifactId="jython3" -Dversion="0.0.1-SNAPSHOT" -Dpackaging="jar" -DgeneratePom=true
        popd
        popd
      shell: bash
    - name: build WALA
      run: |
        pushd /tmp
        git clone https://github.com/wala/WALA
        cd WALA
        git checkout jumpstart-jep-merge
        ./gradlew build publishToMavenLocal -x test -x javadoc -x lintMarkdown
        popd
    - name: Install IDE.
      run: |
        pushd ${{ runner.temp }}/IDE/com.ibm.wala.cast.lsp
        mvn install -B -q -DskipTests
        popd
    - name: Build with Maven
      run: mvn -Dlogging.config.file=\${maven.multiModuleProjectDirectory}/logging.ci.properties verify -B -Pjacoco
    - name: Check formatting with spotless.
      run: mvn spotless:check -B
    - name: Check formatting with Black.
      run: black --fast --check .
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: $CODECOV_TOKEN
        slug: wala/ML
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  testjep:
    runs-on: macos-latest
    steps:
    - name: Check out wala cpython sources
      uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'oracle'
        cache: maven
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'
    - name: installStuff
      run: pip install -r requirements.txt
    - name: test jep
      run:  echo 'print("1 + 1 is " + str(1 + 1))' | jep
    - name: build WALA
      run: |
        pushd /tmp
        git clone https://github.com/wala/WALA
        cd WALA
        git checkout jumpstart-jep-merge
        ./gradlew build publishToMavenLocal -x test -x javadoc -x lintMarkdown
        popd
    - name: build WALA ML core
      run: |
        pushd core
        mvn install -DskipTests
        popd
    - name: Build with Maven
      run: |
        pushd jep
        mvn install -DskipTests
        popd
    - name: get jni dir
      run: echo "SITE_PATH=$(python -c 'import site; print(site.getsitepackages()[0])')" >> $GITHUB_ENV
    - name: Test with Maven
      run: |
        echo "${{ env.SITE_PATH }}"
        pushd jep/com.ibm.wala.cast.python.cpython
        java -ea --enable-native-access=ALL-UNNAMED -Djava.library.path=${{ env.SITE_PATH }}/jep -cp target/com.ibm.wala.cast.python.cpython-0.0.1-SNAPSHOT-tests.jar:target/com.ibm.wala.cast.python.cpython-0.0.1-SNAPSHOT-shaded.jar:target/com.ibm.wala.cast.python.cpython-0.0.1-SNAPSHOT-shaded-tests.jar com.ibm.wala.cast.python.cpython.test.PassingSuite
        popd
