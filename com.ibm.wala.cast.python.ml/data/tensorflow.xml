<?xml version="1.0" ?>
<!DOCTYPE summary-spec>
<!-- TensorFlow model -->
<summary-spec>
  <classloader name="PythonLoader">
    <class name="tensorflow" allocatable="true">
      <method name="import" static="true" descriptor="()Ltensorflow;">
        <new def="x" class="Ltensorflow" />

        <new def="train" class="Lobject" />
        <putfield class="LRoot" field="train" fieldType="LRoot" ref="x" value="train" />

        <new def="AdamOptimizer" class="Ltensorflow/functions/AdamOptimizer" />
        <putfield class="LRoot" field="AdamOptimizer" fieldType="LRoot" ref="train" value="AdamOptimizer" />

        <new def="shuffle_batch" class="Ltensorflow/functions/shuffle_batch" />
        <putfield class="LRoot" field="shuffle_batch" fieldType="LRoot" ref="train" value="shuffle_batch" />

        <new def="InteractiveSession" class="Ltensorflow/functions/InteractiveSession" />
        <putfield class="LRoot" field="InteractiveSession" fieldType="LRoot" ref="x" value="InteractiveSession" />
        <putfield class="LRoot" field="Session" fieldType="LRoot" ref="x" value="InteractiveSession" />

        <new def="parse_single_example" class="Ltensorflow/functions/parse_single_example" />
        <putfield class="LRoot" field="parse_single_example" fieldType="LRoot" ref="x" value="parse_single_example" />

        <new def="FixedLenFeature" class="Ltensorflow/functions/FixedLenFeature" />
        <putfield class="LRoot" field="FixedLenFeature" fieldType="LRoot" ref="x" value="FixedLenFeature" />

        <new def="pass_through" class="Ltensorflow/functions/pass_through" />
        <putfield class="LRoot" field="cast" fieldType="LRoot" ref="x" value="pass_through" />
        <putfield class="LRoot" field="decode_raw" fieldType="LRoot" ref="x" value="pass_through" />

        <new def="estimator" class="Lobject" />
        <putfield class="LRoot" field="estimator" fieldType="LRoot" ref="x" value="estimator" />

        <new def="nn" class="Lobject" />
        <putfield class="LRoot" field="nn" fieldType="LRoot" ref="x" value="nn" />
        <new def="layers" class="Lobject" />
        <putfield class="LRoot" field="layers" fieldType="LRoot" ref="x" value="layers" />
        <new def="random" class="Lobject" />
        <putfield class="LRoot" field="random" fieldType="LRoot" ref="x" value="random" />

        <new def="app" class="Lobject" />
        <putfield class="LRoot" field="app" fieldType="LRoot" ref="x" value="app" />
        <new def="run" class="Ltensorflow/app/run" />
        <putfield class="LRoot" field="run" fieldType="LRoot" ref="app" value="run" />

        <new def="Estimator" class="Ltensorflow/estimator/Estimator" />
        <putfield class="LRoot" field="Estimator" fieldType="LRoot" ref="estimator" value="Estimator" />

        <new def="inputs" class="Lobject" />
        <putfield class="LRoot" field="inputs" fieldType="LRoot" ref="estimator" value="inputs" />

        <new def="numpy_input_fn" class="Ltensorflow/estimator/numpy_input_fn" />
        <putfield class="LRoot" field="numpy_input_fn" fieldType="LRoot" ref="inputs" value="numpy_input_fn" />

        <new def="reshape" class="Ltensorflow/functions/reshape" />
        <putfield class="LRoot" field="reshape" fieldType="LRoot" ref="x" value="reshape" />

        <new def="ones" class="Ltensorflow/functions/ones" />
        <putfield class="LRoot" field="ones" fieldType="LRoot" ref="x" value="ones" />

        <new def="Variable" class="Ltensorflow/functions/Variable" />
        <putfield class="LRoot" field="Variable" fieldType="LRoot" ref="x" value="Variable" />

        <new def="constant" class="Ltensorflow/functions/constant" />
        <putfield class="LRoot" field="constant" fieldType="LRoot" ref="x" value="constant" />

        <new def="zeros" class="Ltensorflow/functions/zeros" />
        <putfield class="LRoot" field="zeros" fieldType="LRoot" ref="x" value="zeros" />

        <new def="SparseTensor" class="Ltensorflow/functions/SparseTensor" />
        <putfield class="LRoot" field="SparseTensor" fieldType="LRoot" ref="x" value="SparseTensor" />

        <new def="fill" class="Ltensorflow/functions/fill" />
        <putfield class="LRoot" field="fill" fieldType="LRoot" ref="x" value="fill" />

        <new def="zeros_like" class="Ltensorflow/functions/zeros_like" />
        <putfield class="LRoot" field="zeros_like" fieldType="LRoot" ref="x" value="zeros_like" />

        <new def="one_hot" class="Ltensorflow/functions/one_hot" />
        <putfield class="LRoot" field="one_hot" fieldType="LRoot" ref="x" value="one_hot" />

        <new def="convert_to_tensor" class="Ltensorflow/functions/convert_to_tensor" />
        <putfield class="LRoot" field="convert_to_tensor" fieldType="LRoot" ref="x" value="convert_to_tensor" />

        <new def="range" class="Ltensorflow/functions/range" />
        <putfield class="LRoot" field="range" fieldType="LRoot" ref="x" value="range" />

        <new def="Tensor" class="Ltensorflow/functions/Tensor" />
        <putfield class="LRoot" field="Tensor" fieldType="LRoot" ref="x" value="Tensor" />

        <new def="eye" class="Ltensorflow/functions/eye" />
        <putfield class="LRoot" field="eye" fieldType="LRoot" ref="x" value="eye" />

        <new def="uniform" class="Ltensorflow/functions/uniform" />
        <putfield class="LRoot" field="uniform" fieldType="LRoot" ref="random" value="uniform" />

        <new def="conv2d" class="Ltensorflow/functions/conv2d" />
        <putfield class="LRoot" field="conv2d" fieldType="LRoot" ref="x" value="conv2d" />
        <putfield class="LRoot" field="conv2d" fieldType="LRoot" ref="nn" value="conv2d" />
        <putfield class="LRoot" field="conv2d" fieldType="LRoot" ref="layers" value="conv2d" />

        <new def="conv3d" class="Ltensorflow/functions/conv3d" />
        <putfield class="LRoot" field="conv3d" fieldType="LRoot" ref="nn" value="conv3d" />

        <new def="placeholder" class="Ltensorflow/functions/placeholder" />
        <putfield class="LRoot" field="placeholder" fieldType="LRoot" ref="x" value="placeholder" />

        <new def="examples" class="Lobject" />
        <putfield class="LRoot" field="examples" fieldType="LRoot" ref="x" value="examples" />

        <new def="tutorials" class="Lobject" />
        <putfield class="LRoot" field="tutorials" fieldType="LRoot" ref="examples" value="tutorials" />

        <new def="mnist" class="Lobject" />
        <putfield class="LRoot" field="mnist" fieldType="LRoot" ref="tutorials" value="mnist" />

        <new def="id" class="Ltensorflow/examples/tutorials/mnist/input_data" />
        <putfield class="LRoot" field="input_data" fieldType="LRoot" ref="mnist" value="id" />

        <new def="rds" class="Ltensorflow/examples/tutorials/mnist/read_data_sets" />
        <putfield class="LRoot" field="read_data_sets" fieldType="LRoot" ref="id" value="rds" />

        <new def="python" class="Lobject" />
        <putfield class="LRoot" field="python" fieldType="LRoot" ref="x" value="python" />

        <new def="ops" class="Lobject" />
        <putfield class="LRoot" field="ops" fieldType="LRoot" ref="python" value="ops" />

        <new def="framework" class="Lobject" />
        <putfield class="LRoot" field="framework" fieldType="LRoot" ref="python" value="framework" />

        <new def="array_ops" class="Lobject" />
        <putfield class="LRoot" field="array_ops" fieldType="LRoot" ref="ops" value="array_ops" />

        <new def="random_ops" class="Lobject" />
        <putfield class="LRoot" field="random_ops" fieldType="LRoot" ref="ops" value="random_ops" />

        <new def="math_ops" class="Lobject" />
        <putfield class="LRoot" field="math_ops" fieldType="LRoot" ref="ops" value="math_ops" />

        <new def="linalg_ops" class="Lobject" />
        <putfield class="LRoot" field="linalg_ops" fieldType="LRoot" ref="ops" value="linalg_ops" />

        <new def="variables" class="Lobject" />
        <putfield class="LRoot" field="variables" fieldType="LRoot" ref="ops" value="variables" />

        <new def="ops2" class="Lobject" />
        <putfield class="LRoot" field="ops" fieldType="LRoot" ref="framework" value="ops2" />

        <new def="sparse_tensor" class="Lobject" />
        <putfield class="LRoot" field="sparse_tensor" fieldType="LRoot" ref="framework" value="sparse_tensor" />

        <new def="constant_op" class="Lobject" />
        <putfield class="LRoot" field="constant_op" fieldType="LRoot" ref="framework" value="constant_op" />

        <new def="fqn_Variable" class="Ltensorflow/python/ops/variables/Variable" />
        <putfield class="LRoot" field="Variable" fieldType="LRoot" ref="variables" value="fqn_Variable" />

        <new def="fqn_ones" class="Ltensorflow/python/ops/array_ops/ones" />
        <putfield class="LRoot" field="ones" fieldType="LRoot" ref="array_ops" value="fqn_ones" />

        <new def="fqn_zeros" class="Ltensorflow/python/ops/array_ops/zeros" />
        <putfield class="LRoot" field="zeros" fieldType="LRoot" ref="array_ops" value="fqn_zeros" />

        <new def="fqn_fill" class="Ltensorflow/python/ops/array_ops/fill" />
        <putfield class="LRoot" field="fill" fieldType="LRoot" ref="array_ops" value="fqn_fill" />

        <new def="fqn_zeros_like" class="Ltensorflow/python/ops/array_ops/zeros_like" />
        <putfield class="LRoot" field="zeros_like" fieldType="LRoot" ref="array_ops" value="fqn_zeros_like" />

        <new def="fqn_one_hot" class="Ltensorflow/python/ops/array_ops/one_hot" />
        <putfield class="LRoot" field="one_hot" fieldType="LRoot" ref="array_ops" value="fqn_one_hot" />

        <new def="fqn_random_uniform" class="Ltensorflow/python/ops/random_ops/random_uniform" />
        <putfield class="LRoot" field="random_uniform" fieldType="LRoot" ref="random_ops" value="fqn_ones" />

        <new def="fqn_range" class="Ltensorflow/python/ops/math_ops/range" />
        <putfield class="LRoot" field="range" fieldType="LRoot" ref="math_ops" value="fqn_range" />

        <new def="fqn_eye" class="Ltensorflow/python/ops/linalg_ops/eye" />
        <putfield class="LRoot" field="eye" fieldType="LRoot" ref="linalg_ops" value="fqn_eye" />

        <new def="fqn_constant" class="Ltensorflow/python/framework/constant_op/constant" />
        <putfield class="LRoot" field="constant" fieldType="LRoot" ref="constant_op" value="fqn_constant" />

        <new def="fqn_SparseTensor" class="Ltensorflow/python/framework/sparse_tensor/SparseTensor" />
        <putfield class="LRoot" field="SparseTensor" fieldType="LRoot" ref="sparse_tensor" value="fqn_SparseTensor" />

        <new def="fqn_convert_to_tensor" class="Ltensorflow/python/framework/ops/convert_to_tensor" />
        <putfield class="LRoot" field="convert_to_tensor" fieldType="LRoot" ref="ops2" value="fqn_convert_to_tensor" />

        <new def="fqn_Tensor" class="Ltensorflow/python/framework/ops/Tensor" />
        <putfield class="LRoot" field="Tensor" fieldType="LRoot" ref="ops2" value="fqn_Tensor" />

        <return value="x" />
      </method>
    </class>

    <package name="tensorflow/objects">
      <class name="feature" allocatable="true" />
    </package>

    <package name="tensorflow/functions">

      <class name="AdamOptimizer" allocatable="true">
        <method name="do" descriptor="()LRoot;">
          <new def="opt" class="Lobject" />

          <new def="minimize" class="Ltensorflow/functions/minimize" />
          <putfield class="LRoot" field="minimize" fieldType="LRoot" ref="opt" value="minimize" />

          <return value="opt" />
        </method>
      </class>

      <class name="minimize" allocatable="true">
        <method name="do" descriptor="()LRoot;">
          <new def="v" class="Lobject" />
          <new def="f" class="Ltensorflow/functions/Runner" />
          <putfield class="LRoot" field="run" fieldType="LRoot" ref="v" value="f" />
          <return value="v" />
        </method>
      </class>

      <class name="shuffle_batch" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self data">
          <return value="data" />
        </method>
      </class>

      <class name="InteractiveSession" allocatable="true">
        <method name="do" descriptor="()LRoot;">
          <new def="v" class="Lobject" />
          <new def="f" class="Ltensorflow/functions/Runner" />
          <putfield class="LRoot" field="run" fieldType="LRoot" ref="v" value="f" />
          <return value="v" />
        </method>
      </class>

      <class name="Runner" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self graph feed_dict">
          <return value="self" />
        </method>
      </class>

      <class name="set_shape" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="2" paramNames="self shape">
          <return value="self" />
        </method>
      </class>

      <class name="reshape" allocatable="true">
        <method name="copy_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/examples/tutorials/mnist/dataset" />
          <return value="x" />
        </method>

        <method name="do" descriptor="()LRoot;" numArgs="3">
          <call class="LRoot" name="copy_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="ones" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/ones" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="shape dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="Variable" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/variables/Variable" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="12" paramNames="initial_value trainable validate_shape caching_device name variable_def dtype import_scope constraint synchronization aggregation shape">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="constant" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/constant_op/constant" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="4" paramNames="value dtype shape name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="zeros" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/zeros" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="shape dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="SparseTensor" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/sparse_tensor/SparseTensor" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="indices values dense_shape">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="fill" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/fill" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="dims value name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="zeros_like" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/zeros_like" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="input dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="one_hot" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/one_hot" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="7" paramNames="indices depth on_value off_value axis dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="convert_to_tensor" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/ops/convert_to_tensor" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="4" paramNames="value dtype dtype_hint name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="range" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/math_ops/range" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="4" paramNames="limit delta dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="Tensor" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/ops/Tensor" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="op value_index dtype">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="eye" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/linalg_ops/eye" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="5" paramNames="num_rows num_columns batch_shape dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="uniform" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/random_ops/uniform" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="6" paramNames="shape minval maxval dtype seed name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>

      <class name="placeholder" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="dtype shape name">
          <new def="x" class="Lobject" />
          <return value="x" />
        </method>
      </class>

      <class name="pass_through" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self data features">
          <return value="data" />
        </method>
      </class>

      <class name="parse_single_example" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self data features">
          <return value="features" />
        </method>
      </class>

      <class name="FixedLenFeature" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self dims type">
          <new def="x" class="Ltensorflow/objects/feature" />

          <new def="y" class="Ltensorflow/functions/set_shape" />
          <putfield class="LRoot" field="set_shape" fieldType="LRoot" ref="x" value="y" />

          <return value="x" />
        </method>
      </class>

      <class name="conv2d" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self x y">
          <return value="x" />
        </method>
      </class>

      <class name="conv3d" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self x y">
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/estimator">
      <class name="Estimator" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="2" paramNames="self model">
          <new def="x" class="Ltensorflow/estimator/train/train" />
          <putfield class="LRoot" field="train" fieldType="LRoot" ref="self" value="x" />
          <putfield class="LRoot" field="$callback" fieldType="LRoot" ref="x" value="model" />
          <return value="arg0" />
        </method>
      </class>

      <class name="numpy_input_fn" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="5" paramNames="self x y batch_size shuffle">
          <new def="xx" class="Lobject" />
          <putfield class="LRoot" field="data" fieldType="LRoot" ref="xx" value="2" />
          <putfield class="LRoot" field="labels" fieldType="LRoot" ref="xx" value="3" />
          <return value="xx" />
        </method>
      </class>
    </package>

    <package name="tensorflow/estimator/train">
      <class name="train" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3">
          <getfield class="LRoot" field="$callback" fieldType="LRoot" ref="arg0" def="xx" />
          <getfield class="LRoot" field="data" fieldType="LRoot" ref="arg1" def="data" />
          <call class="LRoot" name="do" descriptor="()LRoot;" type="virtual" arg0="xx" arg1="data" arg2="3" numArgs="3" def="v" />
          <return value="v" />
        </method>
      </class>
    </package>

    <package name="tensorflow/app">
      <class name="run" allocatable="true">
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="self main argv">
          <call class="LRoot" name="do" descriptor="()LRoot;" type="virtual" arg0="arg1" arg1="" def="v" />
          <return value="v" />
        </method>
      </class>
    </package>

    <package name="tensorflow/examples/tutorials/mnist">
      <class name="read_data_sets" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/examples/tutorials/mnist/dataset" />
          <return value="x" />
        </method>

        <method name="do" descriptor="()LRoot;">
          <new def="test" class="Lobject" />

          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />

          <putfield class="LRoot" field="images" fieldType="LRoot" ref="test" value="x" />

          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="y" />

          <new def="training" class="Lobject" />
          <putfield class="LRoot" field="images" fieldType="LRoot" ref="training" value="y" />

          <new def="data" class="Lobject" />
          <putfield class="LRoot" field="test" fieldType="LRoot" ref="data" value="test" />
          <putfield class="LRoot" field="train" fieldType="LRoot" ref="data" value="training" />

          <return value="data" />
        </method>
      </class>
      <class name="input_data" allocatable="true">
      </class>
      <class name="dataset" allocatable="true">
      </class>
    </package>

    <package name="tensorflow/python/ops/array_ops">
      <class name="ones" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/ones" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="shape dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
      <class name="zeros" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/zeros" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="shape dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
      <class name="fill" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/fill" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="dims value name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
      <class name="zeros_like" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/zeros_like" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="input dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
      <class name="one_hot" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/array_ops/one_hot" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="7" paramNames="indices depth on_value off_value axis dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/ops/random_ops">
      <class name="random_uniform" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/random_ops/random_uniform" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="6" paramNames="shape minval maxval dtype seed name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/ops/math_ops">
      <class name="range" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/math_ops/range" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="4" paramNames="limit delta dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/ops/linalg_ops">
      <class name="eye" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/linalg_ops/eye" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="5" paramNames="num_rows num_columns batch_shape dtype name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/ops/variables">
      <class name="Variable" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/ops/variables/Variable" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="12" paramNames="initial_value trainable validate_shape caching_device name variable_def dtype import_scope constraint synchronization aggregation shape">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/framework/constant_op">
      <class name="constant" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/constant_op/constant" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="4" paramNames="value dtype shape name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/framework/sparse_tensor">
      <class name="SparseTensor" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/sparse_tensor/SparseTensor" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="indices values dense_shape">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/python/framework/ops">
      <class name="convert_to_tensor" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/ops/convert_to_tensor" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="4" paramNames="value dtype dtype_hint name">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
      <class name="Tensor" allocatable="true">
        <method name="read_data" descriptor="()LRoot;">
          <new def="x" class="Ltensorflow/python/framework/ops/Tensor" />
          <return value="x" />
        </method>
        <method name="do" descriptor="()LRoot;" numArgs="3" paramNames="op value_index dtype">
          <call class="LRoot" name="read_data" descriptor="()LRoot;" type="virtual" arg0="arg0" def="x" />
          <return value="x" />
        </method>
      </class>
    </package>

    <package name="tensorflow/examples/tutorials">
      <class name="mnist" allocatable="true">
        <method name="import" static="true" descriptor="()Ltensorflow/examples/tutorials/mnist;">
          <new def="x" class="Ltensorflow/examples/tutorials/mnist" />
          <call name="__init__" class="Ltensorflow/examples/tutorials/mnist" descriptor="()V" type="virtual" arg0="x" />
          <return value="x" />
        </method>
        <method name="__init__" descriptor="()V">
          <new def="x" class="Ltensorflow/examples/tutorials/mnist/input_data" />
          <new def="y" class="Ltensorflow/examples/tutorials/mnist/read_data_sets" />
          <putfield class="Ltensorflow/examples/tutorials/mnist" field="input_data" fieldType="LRoot" ref="arg0" value="x" />
          <putfield class="Ltensorflow/examples/tutorials/mnist/input_data" field="read_data_sets" fieldType="LRoot" ref="x" value="y" />
        </method>
      </class>
    </package>

  </classloader>
</summary-spec>
